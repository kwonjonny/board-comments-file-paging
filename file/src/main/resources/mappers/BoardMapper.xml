<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- BoardMapper Xml -->
<mapper namespace="board.file.mappers.BoardMapper">

<!-- BoardMapper id = "listBoard" -->
<select id="listBoard" parameterType="board.file.dto.board.BoardListDTO" resultType="board.file.dto.board.BoardListDTO">
    SELECT tb.*, CONCAT(tbi.uuid, '_', tbi.filename) AS fileName
    FROM tbl_board tb
   
    LEFT JOIN tbl_board_img tbi ON tb.tno = tbi.tno AND tbi.ord = 0
    WHERE tb.tno > 0
     <if test="searchType != null and keyword != null">
        WHERE (
            <if test="searchType == 'title' or searchType == 'all'">
                tb.title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'content' or searchType == 'all'">
                <if test="searchType == 'all'">OR</if>
                tb.content LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'writer' or searchType == 'all'">
                <if test="searchType == 'all'">OR</if>
                tb.writer LIKE CONCAT('%', #{keyword}, '%')
            </if>
        ) 
    </if>
    ORDER BY tb.tno DESC 
    LIMIT #{skip}, #{size}
</select>


<!-- BoardMapper id = "createBoard" -->
<insert id="createBoard" parameterType="board.file.dto.board.BoardCreateDTO"
 useGeneratedKeys="true" keyProperty="tno">
    INSERT INTO tbl_board 
    (title, content, writer)
    VALUES(#{title}, #{content}, #{writer})

    <!-- last insert id 확인 -->
    <selectKey resultType="long" keyProperty="tno" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
</insert>


<!-- BoardMapper id = "deleteBoard" -->
<delete id="deleteBoard" parameterType="long">
    DELETE FROM tbl_board 
    WHERE tno = #{tno}
</delete>


<!-- fileNames의 resultMap -->
<!-- 파일명 결과 매핑 -->
<resultMap id="FileNameResultMap" type="java.lang.String">
  <id property="fileName" column="fileName"/>
</resultMap>


<!-- BoardMapper id = "readBoard" -->
<select id="readBoard" parameterType="long" resultMap="BoardResultMap">
  SELECT b.tno, b.title, b.content, b.writer, b.registDate, b.updateDate,
    CONCAT(i.uuid, '_', i.filename) AS fileName
FROM tbl_board b
LEFT OUTER JOIN tbl_board_img i ON b.tno = i.tno
WHERE b.tno = #{tno};
</select>


<!-- 여러개의 사진을 가져오기 위한 resultMap using -->
<resultMap id="BoardResultMap" type="board.file.dto.board.BoardDTO">
  <id property="tno" column="tno"/>
  <result property="title" column="title"/>
  <result property="content" column="content"/>
  <result property="writer" column="writer"/>
  <result property="registDate" column="registDate"/>
  <result property="updateDate" column="updateDate"/>
  <result property="replyCnt" column="replyCnt"/>
  <collection property="fileName" ofType="java.lang.String" resultMap="FileNameResultMap"/>
</resultMap>


<!-- BoardMapper id = "updateBoard" -->
<update id="updateBoard" parameterType="board.file.dto.board.BoardUpdateDTO">
    UPDATE tbl_board
    SET title = #{title}, content = #{content}, writer = #{writer}, updateDate = now()
    WHERE tno = #{tno}
</update>


<!-- BoardMapper id = "total" -->
<select id="total" resultType="int">
    SELECT COUNT(*) 
    FROM (SELECT * FROM tbl_board 
    WHERE tno > 0 
    LIMIT #{countEnd}
    ) tbl_board
</select>


<!-- BoardMapper id = "viewCount" -->
<update id="viewCount" parameterType="long">
    UPDATE tbl_board
    SET viewCnt = viewCnt +1
    WHERE tno = #{tno}
</update>


<!-- BoardMapper id = "createBoardNotice" -->
<insert id="createBoardNotice" parameterType="board.file.dto.board.BoardNoticeCreateDTO">
    INSERT INTO tbl_board
    (title, writer, content, notice) 
    VALUES(
      #{title}, 
      #{writer}, 
      #{content}, 
      (SELECT IFNULL(MAX(notice), 0) + 1 FROM tbl_board)
    )
    <!-- 공지사항 순서를 지키기 위해 INFULL MAX notice 컬럼 +1 을 해줍니다 -->
</insert>


<!-- BoardMapper id = "updateBoardNotice" -->
<update id="updateBoardNotice" parameterType="board.file.dto.board.BoardNoticeUpdateDTO">
    UPDATE tbl_board
    SET title = #{title} , writer = #{writer}, content = #{content}, updateDate = now()
    WHERE tno = #{tno}
</update>


<!-- BoardMapper id = "readBoardNotice" -->
<select id="readBoardNotice" parameterType="long" resultMap="BoardResultMap">
    SELECT b.tno, b.title, b.content, b.writer, b.registDate, b.updateDate, b.notice 
        CONCAT(i.uuid, '_', filename) AS fileName
    FROM tbl_board b
    LEFT OUTER JOIN tbl_board_img i on b.tno = i.tno
    WHERE t.tno = #{tno}
</select>


</mapper>